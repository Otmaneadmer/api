{"remainingRequest":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\src\\pages\\Dashboard\\Dashboard.vue?vue&type=template&id=17b74d76&","dependencies":[{"path":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\src\\pages\\Dashboard\\Dashboard.vue","mtime":1652500159068},{"path":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652491193764},{"path":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1652491201806},{"path":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1652491193764},{"path":"C:\\Users\\user\\Documents\\App Django\\Application - Back API Django - Front VueJS\\frontend_vuejs\\node_modules\\vue-loader\\lib\\index.js","mtime":1652491197575}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}